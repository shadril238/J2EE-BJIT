public class Item {
    int weight;
    String name;

    int getWeight() {
        return weight;
    }

    String getName() {
        return name;
    }
}

public class Coin extends Item {
    int value = 5;

    public Coin(int weight) {
        this.weight = weight;
        this.name = "Coin";
    }
}

public class Crossbow extends Item {
    int power = 10;

    public Crossbow(int weight) {
        this.weight = weight;
        this.name = "Crossbow";
    }
}

public class Key extends Item {
    int code = 234;

    public Key(int weight) {
        this.weight = weight;
        this.name = "Key";
    }
}

public class Map extends Item {
    int treasure = 5;

    public Map(int weight) {
        this.weight = weight;
        this.name = "Map";
    }
}


public class Bag {
    private int currentWeight = 0;
    private int capacity;

    public Bag(int capacity) {
        this.capacity = capacity;
    }

    public boolean canAddItem(Item item) {
        return currentWeight + item.getWeight() <= capacity;
    }

    public void addItem(Item item) {
        currentWeight = currentWeight + item.getWeight();
    }

    public int getCurrentWeight() {
        return currentWeight;
    }
}

public class Main {
    public static void main(String[] args) {
        Bag bag = new Bag(40);
        Crossbow crossbow = new Crossbow(20);
        Coin coin = new Coin(5);
        Key key = new Key(10);
        Map treasureMap = new Map(15);
        addToBag(bag, crossbow);
        addToBag(bag, coin);
        addToBag(bag, key);
        addToBag(bag, treasureMap);
    }

    private static void addToBag(Bag bag, Item item) {
        if (bag.canAddItem(item)) {
            bag.addItem(item);
            System.out.println(item.getName() + " added, current weight = " + bag.getCurrentWeight());
        } else {
            System.out.println("Bag is full! " + item.getName() + " can not be added!");
        }
    }
}
